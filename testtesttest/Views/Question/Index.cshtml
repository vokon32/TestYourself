@using testtesttest.ViewModels
@model QuestionAnswerViewModel
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<form method="post" asp-action="Index" asp-controller="Question" enctype="multipart/form-data">
    <div class="px-4 pt-5 my-5 text-center">
        <h4 class="lead fw-bold">@Model.Contain</h4>
        <div class="form-group">
            <input type="hidden" asp-for="testId" id="testId" name="testId" value="@Model.testId" />
            <input type="hidden" id="Id" name="Id" asp-for="@Model.Id" value="@Model.Id" />
            <input type="hidden" id="ResultScore" name="ResultScore" asp-for="@Model.ResultScore" value="@Model.ResultScore" />
            <input type="hidden" id="CurrentIndex" name="CurrentIndex" asp-for="@Model.CurrentIndex" value="@Model.CurrentIndex" />
            <div class="form-check">
                <span class="lead m-2">@Model.FirstAnswer</span>@Html.RadioButtonFor(m=> m.ChosenAnswer, "FirstAnswer")
            </div>
            <div class="form-group">
                <span class="lead m-2">@Model.SecondAnswer</span> @Html.RadioButtonFor(m => m.ChosenAnswer, "SecondAnswer")
            </div>

            @if (!Model.isCorrect)
            {
                <input type="submit" value="Confirm" class="btn btn-danger float-right mt-3" />
            }
            else
            {
                <button type="submit" class="btn btn-primary">Finish the test</button>
            }
        </div>
    </div>

</form>
